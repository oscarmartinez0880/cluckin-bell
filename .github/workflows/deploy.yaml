---
name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev|qa|prod)"
        required: true
        type: choice
        options: [dev, qa, prod]

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ 
            github.event.inputs.environment == 'dev' && secrets.AWS_EKS_DEPLOY_ROLE_ARN_DEV ||
            github.event.inputs.environment == 'qa' && secrets.AWS_EKS_DEPLOY_ROLE_ARN_QA ||
            secrets.AWS_EKS_DEPLOY_ROLE_ARN_PROD 
          }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            CLUSTER_NAME="cb-use1-prod"
          else
            CLUSTER_NAME="cb-use1-shared"
          fi
          
          aws eks update-kubeconfig --region us-east-1 --name "$CLUSTER_NAME"

      - name: Deploy to Kubernetes
        run: |
          ENV="${{ github.event.inputs.environment }}"
          echo "Deploying to environment: $ENV"
          
          kubectl apply -f k8s/$ENV/

      - name: Verify deployment
        run: |
          ENV="${{ github.event.inputs.environment }}"
          NAMESPACE="cluckn-bell-$ENV"
          
          echo "Verifying deployment in namespace: $NAMESPACE"
          
          # Wait for deployments to be ready
          kubectl rollout status deployment/drumstick-web -n $NAMESPACE --timeout=300s
          kubectl rollout status deployment/wingman-api -n $NAMESPACE --timeout=300s
          
          # Show status
          kubectl get all -n $NAMESPACE
          kubectl get ingress -n $NAMESPACE
