# Nonprod (shared dev + qa) platform add-ons
global:
  clusterName: "cluckn-bell-nonprod"
  region: "us-east-1"
  environment: "nonprod"
  account: "264765154707"

platformAddons:
  awsLoadBalancerController:
    enabled: true
    namespace: kube-system
    chart:
      repo: https://aws.github.io/eks-charts
      name: aws-load-balancer-controller
      version: 1.7.2
    clusterName: cluckn-bell-nonprod
    serviceAccount:
      create: true
      name: aws-load-balancer-controller
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::264765154707:role/cluckn-bell-nonprod-aws-load-balancer-controller

  externalDNS:
    enabled: true
    namespace: external-dns
    chart:
      repo: https://kubernetes-sigs.github.io/external-dns/
      name: external-dns
      version: 1.14.5
    serviceAccount:
      create: true
      name: external-dns
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::264765154707:role/cluckn-bell-nonprod-external-dns
    txtOwnerId: cluckn-bell-nonprod
    domainFilters:
      - dev.cluckn-bell.com
      - qa.cluckn-bell.com
      - internal.dev.cluckn-bell.com
    extraArgs:
      - --policy=upsert-only
      - --log-format=text
      - --txt-prefix=_extdns
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 200m
        memory: 500Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

  certManager:
    enabled: true
    namespace: cert-manager
    chart:
      repo: https://charts.jetstack.io
      name: cert-manager
      version: v1.15.3
    installCRDs: true
    serviceAccount:
      name: cert-manager
      annotations: {}
      # Optional: Add IRSA role for DNS-01 validation with Route53
      # annotations:
      #   eks.amazonaws.com/role-arn: arn:aws:iam::264765154707:role/cluckn-bell-nonprod-cert-manager
    clusterIssuers:
      cluster-issuer-staging:
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        email: admin@cluckn-bell.com
        solvers:
          # HTTP-01 solver using ALB Ingress
          - http01:
              ingress:
                class: alb
          # DNS-01 solver for wildcard certificates (optional, requires IRSA role)
          # - dns01:
          #     route53:
          #       region: us-east-1
          #       hostedZoneID: ZDEVPUBLIC123  # TODO: Replace with actual dev zone ID
          #   selector:
          #     dnsZones:
          #       - dev.cluckn-bell.com
          # - dns01:
          #     route53:
          #       region: us-east-1
          #       hostedZoneID: ZQAPUBLIC456  # TODO: Replace with actual qa zone ID
          #   selector:
          #     dnsZones:
          #       - qa.cluckn-bell.com
      cluster-issuer-prod:
        server: https://acme-v02.api.letsencrypt.org/directory
        email: admin@cluckn-bell.com
        solvers:
          # HTTP-01 solver using ALB Ingress
          - http01:
              ingress:
                class: alb
          # DNS-01 solver for wildcard certificates (optional, requires IRSA role)
          # - dns01:
          #     route53:
          #       region: us-east-1
          #       hostedZoneID: ZDEVPUBLIC123  # TODO: Replace with actual dev zone ID
          #   selector:
          #     dnsZones:
          #       - dev.cluckn-bell.com
          # - dns01:
          #     route53:
          #       region: us-east-1
          #       hostedZoneID: ZQAPUBLIC456  # TODO: Replace with actual qa zone ID
          #   selector:
          #     dnsZones:
          #       - qa.cluckn-bell.com

  metricsServer:
    enabled: true
    chart:
      repo: https://kubernetes-sigs.github.io/metrics-server/
      name: metrics-server
      version: 3.12.2

  kubePrometheusStack:
    enabled: true
    namespace: monitoring
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: kube-prometheus-stack
      version: 62.6.0
    prometheus:
      prometheusSpec:
        retention: 7d
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 2Gi
    alertmanager:
      alertmanagerSpec:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
    grafana:
      enabled: true
      adminPassword: admin
      service:
        type: LoadBalancer
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 200m
          memory: 512Mi

  # Platform Ingress Resources (deployed after ALB Controller)
  ingress:
    argocd:
      enabled: true
      hosts:
        - argocd.dev.cluckn-bell.com
      annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/group.name: cluckn-bell-nonprod
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/ssl-redirect: "443"
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/healthcheck-path: /healthz
        # Enable TLS with cert-manager
        cert-manager.io/cluster-issuer: cluster-issuer-prod
      tls:
        - secretName: argocd-tls
          hosts:
            - argocd.dev.cluckn-bell.com
    grafana:
      enabled: true
      hosts:
        - grafana.dev.cluckn-bell.com
      annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/group.name: cluckn-bell-nonprod
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/ssl-redirect: "443"
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/healthcheck-path: /api/health
        # Enable TLS with cert-manager
        cert-manager.io/cluster-issuer: cluster-issuer-prod
      tls:
        - secretName: grafana-tls
          hosts:
            - grafana.dev.cluckn-bell.com
    prometheus:
      enabled: true
      hosts:
        - prometheus.dev.cluckn-bell.com
      annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/group.name: cluckn-bell-nonprod
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/ssl-redirect: "443"
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/healthcheck-path: /-/healthy
        # Enable TLS with cert-manager
        cert-manager.io/cluster-issuer: cluster-issuer-prod
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.dev.cluckn-bell.com