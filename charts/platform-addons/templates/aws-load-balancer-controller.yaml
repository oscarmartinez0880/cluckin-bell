{{- if .Values.platformAddons.awsLoadBalancerController.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: aws-load-balancer-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "platform-addons.labels" . | nindent 4 }}
    component: aws-load-balancer-controller
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://aws.github.io/eks-charts
    chart: aws-load-balancer-controller
    targetRevision: 1.7.1
    helm:
      values: |
        clusterName: {{ .Values.global.clusterName | quote }}
        region: {{ .Values.global.region | quote }}
        serviceAccount:
          create: {{ .Values.platformAddons.awsLoadBalancerController.serviceAccount.create | default false }}
          name: {{ .Values.platformAddons.awsLoadBalancerController.serviceAccount.name | default "aws-load-balancer-controller" | quote }}
          {{- if .Values.platformAddons.awsLoadBalancerController.serviceAccount.annotations }}
          annotations:
            {{- toYaml .Values.platformAddons.awsLoadBalancerController.serviceAccount.annotations | nindent 12 }}
          {{- end }}
        enableServiceMutatorWebhook: false
        enableShield: false
        enableWaf: false
        enableWafv2: false
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 500Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.platformAddons.awsLoadBalancerController.namespace | default "kube-system" }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
{{- end }}